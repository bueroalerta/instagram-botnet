version: 2.1


workflows:
  version: 2
  test-deploy:
    jobs:
      - test:
          name: upload_single_post
          script: tests/upload_single_post.yml

      - test:
          name: delete_last_post
          script: tests/delete_last_post.yml

      # - test:
      #     name: print_users_feed
      #     script: tests/print_users_feed.yml
      # - test:
      #     name: print_users_feed
      #     script: tests/print_users_feed.yml
      # - test:
      #     name: print_users_stories
      #     script: tests/print_users_stories.yml
      # - test:
      #     name: message_some_urls
      #     script: tests/message_some_urls.yml
      - bump_version:
          requires:
              - upload_single_post
              - delete_last_post
      - deploy:
           requires:
              - bump_version




jobs:
  deploy:
      docker:
        - image: xmorse/deploy-dockerhub:0.0.0
      steps:
          - checkout
          - setup_remote_docker
          - run: cd src && USERNAME=$DOCKERUSERNAME PASSWORD=$DOCKERPASSWORD IMAGE_NAME=instagram-botnet /deploy
  bump_version:
      docker:
        - image: xmorse/bump-version:0.0.3
      steps:
        - checkout
        - run: cd src && GITHUB_TOKEN=$GITHUB_PERSONAL_TOKEN /bump

  test:
    parameters:
      script:
        type: string
    docker:
      - image: docker/compose:1.23.2
    working_directory: /src

    steps:
      - checkout
      - setup_remote_docker
      - load_tests_cache
      - run:
          name: Build with docker-compose
          command: docker-compose -p $CIRCLE_PROJECT_REPONAME -f .circleci/docker-compose.yaml build
      - save_tests_cache
      - run:
          name: Test with docker-compose
          command: |
            docker-compose -p $CIRCLE_PROJECT_REPONAME -f .circleci/docker-compose.yaml up --no-start
            docker cp ./tests tester:/src/ # because circleci doesn't support volumes
            docker-compose -p $CIRCLE_PROJECT_REPONAME -f .circleci/docker-compose.yaml up --abort-on-container-exit --exit-code-from tester
          environment:
            SCRIPT:   << parameters.script >>

commands:
    save_tests_cache:
        steps:
          - run:
              name: Save Docker layers cache
              command: |
                DOCKER_IMAGES=$(docker images --format "{{.Repository}}" --filter=reference="${CIRCLE_PROJECT_REPONAME}_*")
                DOCKER_LAYERS=$(for image in $DOCKER_IMAGES; do docker history $image -q | grep -v missing; done)
                docker save -o ~/docker-layers.tar $DOCKER_LAYERS
          - save_cache:
              key: v6-docker-{{ .Branch }}
              paths:
                - ~/docker-layers.tar

    load_tests_cache:
        steps:
          - restore_cache:
              keys:
                - v6-docker-{{ .Branch }}
          - run:
              name: Load Docker layers cache
              command: |
                set +o pipefail
                docker load -i ~/docker-layers.tar | true
